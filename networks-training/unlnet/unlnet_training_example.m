% Per-stage training of UNLNET for grayscale images (greedy optimization)
% To enable gpu training the 'gpus' option must be set.
net = unlnet_greedy_train([],'name_id','unlnet_LN','shrink_type','identity',...
  'step',0.1,'origin',-104,'gpus',[],'plotStatistics',false,'rbf_means', ...
  -100:4:100,'rbf_precision',4,'imdbPath','../../datasets/imdb.mat', ...
  'patchSize',[7 7],'numFilters',48,'padType','symmetric','weightSharing', ...
  true,'groupWeightSharing',true,'zeroMeanFilters',true,'weightNormalization', ...
  [true,true],'s',ones(1,48,'single'),'noise_std',[5 9 13 17 21 25 29], ...
  'solver',@solver.adam,'solverOpts',struct('beta1',0.9,'beta2',0.999,'eps',1e-4), ...
  'learningRate',1e-3*ones(1,100),'numEpochs',100,'batchSize',100,'batchSize_val', ...
  100,'alpha',0,'clb',-100,'cub',100,'lb',0,'ub',255,'patchFile', ...
  'Results/patchSimilarityIndices_7x7_GLN.mat');

% Joint-training of UNLNET for grayscale images
load('Results/unlnet_LN-stages:5-psize:7x7@48-WS-GS-std:[5,9,13,17,21,25,29]-solver:adam-greedyTrain/net-final.mat');
net = unlnet_joint_train(net,'name_id','unlnet_LN','shrink_type','identity', ...
  'step',0.1,'origin',-104,'gpus',[],'plotStatistics',false,'rbf_means', ...
  -100:4:100,'rbf_precision',4,'imdbPath','../../datasets/imdb.mat', ...
  'patchSize',[7 7],'numFilters',48,'padType','symmetric','weightSharing', ...
  true,'groupWeightSharing',true,'zeroMeanFilters',true,'weightNormalization', ...
  [true,true],'s',ones(1,48,'single'),'noise_std',[5 9 13 17 21 25 29], ...
  'solver',@solver.adam,'solverOpts',struct('beta1',0.9,'beta2',0.999,'eps',1e-4), ...
  'learningRate',[1e-3*ones(1,80) 5e-4*ones(1,20)],'numEpochs',100,'batchSize',40, ...
  'batchSize_val',100,'alpha',0,'clb',-100,'cub',100,'lb',0,'ub',255, ...
  'patchFile','Results/patchSimilarityIndices_7x7_GLN.mat');